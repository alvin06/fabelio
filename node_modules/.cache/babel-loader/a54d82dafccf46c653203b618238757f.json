{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Test\\\\fabelio\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport Select from 'react-select';\n\nfunction Product(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.price), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.description), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, props.furnitureStyle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.deliveryTime));\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ListProducts: [],\n      ListFurnitureStyle: [{\n        value: 1,\n        label: ''\n      }],\n      SearchValue: '',\n      SelectValue: []\n    };\n  }\n\n  componentWillMount() {\n    this._getApiList();\n  }\n\n  _getApiList() {\n    let listProduct = { ...this.state.ListProducts\n    }; // let listFurniture = {...this.state.ListFurnitureStyle};\n\n    let listFurniture = [];\n    axios.get('http://www.mocky.io/v2/5c9105cb330000112b649af8').then(response => {\n      // get list product from API\n      listProduct = response.data.products;\n      this.setState({\n        ListProducts: listProduct\n      }); // get list furniture style from API\n\n      for (let i = 0; i < response.data.furniture_styles.length; i++) {\n        listFurniture.push({\n          value: response.data.furniture_styles[i],\n          label: response.data.furniture_styles[i]\n        });\n        this.setState({\n          ListFurnitureStyle: listFurniture\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  _changeBySearch(e) {\n    this.setState({\n      SearchValue: e.target.value.substr(0, 20)\n    });\n  }\n\n  _changeBySelect(e) {\n    let selectedValue = [];\n\n    for (let i = 0; i < e.length; i++) {\n      selectedValue.push(e[i].value);\n      this.setState({\n        SelectValue: selectedValue\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this._changeBySearch.bind(this),\n      value: this.state.SearchValue,\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(ReactMultiSelectCheckboxes, {\n      options: this.state.ListFurnitureStyle // value= {this.state.SelectValue[0]||''} \n      ,\n      onChange: this._changeBySelect.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), this.renderProductBySearch(this.state.SelectValue));\n  }\n\n  renderProductBySearch(furniture) {\n    let filteredProduct;\n\n    if (!furniture) {\n      filteredProduct = this.state.ListProducts.filter(ListProducts => {\n        return ListProducts.name.toLowerCase().indexOf(this.state.SearchValue.toLowerCase()) !== -1;\n      });\n    } else {\n      filteredProduct = this.state.ListProducts.filter(ListProducts => {\n        return ListProducts.furniture_style.indexOf(furniture) !== -1;\n      });\n    }\n\n    console.log(furniture);\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, filteredProduct.map(item => React.createElement(Product, {\n      key: item.name,\n      name: item.name,\n      price: item.price,\n      description: item.description,\n      deliveryTime: item.delivery_time,\n      furnitureStyle: item.furniture_style.map(itemFurniture => React.createElement(\"p\", {\n        key: itemFurniture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, itemFurniture)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Learning/Test/fabelio/src/App.js"],"names":["React","Component","axios","ReactMultiSelectCheckboxes","Select","Product","props","name","price","description","furnitureStyle","deliveryTime","App","state","ListProducts","ListFurnitureStyle","value","label","SearchValue","SelectValue","componentWillMount","_getApiList","listProduct","listFurniture","get","then","response","data","products","setState","i","furniture_styles","length","push","catch","err","console","log","_changeBySearch","e","target","substr","_changeBySelect","selectedValue","render","bind","renderProductBySearch","furniture","filteredProduct","filter","toLowerCase","indexOf","furniture_style","map","item","delivery_time","itemFurniture"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport ReactMultiSelectCheckboxes from 'react-multiselect-checkboxes';\nimport Select from 'react-select';\n\nfunction Product(props){\n  return(\n    <div>\n      <b>{props.name}</b>\n      <p>{props.price}</p>\n      <p>{props.description}</p>\n      <p>{props.furnitureStyle}</p>\n      <p>{props.deliveryTime}</p>\n    </div>\n  )\n}\n\nclass App extends Component{\n  state ={\n    ListProducts:[],\n    ListFurnitureStyle:[{\n      value:1,\n      label:''\n    }],\n    SearchValue:'',\n    SelectValue:[]\n  }\n\n  componentWillMount(){\n    this._getApiList();\n  }\n\n  _getApiList(){\n    let listProduct = {...this.state.ListProducts};\n    // let listFurniture = {...this.state.ListFurnitureStyle};\n    let listFurniture =[];\n    axios.get('http://www.mocky.io/v2/5c9105cb330000112b649af8')\n    .then(response => {\n      // get list product from API\n      listProduct = response.data.products;\n      this.setState({ListProducts: listProduct});\n      // get list furniture style from API\n      for(let i = 0; i<response.data.furniture_styles.length; i++){\n        listFurniture.push({\n          value: response.data.furniture_styles[i],\n          label: response.data.furniture_styles[i]\n        })\n        this.setState({ListFurnitureStyle: listFurniture}); \n      }\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  _changeBySearch(e){\n    this.setState({SearchValue: e.target.value.substr(0,20)});\n  }\n  _changeBySelect(e){\n    let selectedValue = [] ;\n    for(let i=0; i<e.length; i++){\n      selectedValue.push(e[i].value)\n      this.setState({SelectValue: selectedValue})\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <input type=\"text\" onChange = {this._changeBySearch.bind(this)} value={this.state.SearchValue} placeholder=\"Search...\"></input>\n        <ReactMultiSelectCheckboxes \n          options={this.state.ListFurnitureStyle}\n          // value= {this.state.SelectValue[0]||''} \n          onChange={this._changeBySelect.bind(this)}/>\n        {/* <Select isMulti \n          options={this.state.ListFurnitureStyle}\n          onChange={this._changeBySelect.bind(this)} \n          value={this.state.SelectValue}\n        /> */}\n        {this.renderProductBySearch(this.state.SelectValue)}\n      </div>\n    );\n  }\n\n  renderProductBySearch(furniture){\n    let filteredProduct;\n    if(!furniture){\n      filteredProduct = this.state.ListProducts.filter(\n        (ListProducts) => {\n          return ListProducts.name.toLowerCase().indexOf(this.state.SearchValue.toLowerCase()) !== -1;\n        }\n      );\n    }\n    else{\n      filteredProduct = this.state.ListProducts.filter(\n        (ListProducts) => {\n          return ListProducts.furniture_style.indexOf(furniture) !== -1;\n        }\n      );\n    }\n    console.log(furniture)\n    return(\n      <ul>\n          {filteredProduct.map(item => (\n            <Product key = {item.name} \n              name = {item.name} \n              price = {item.price} \n              description = {item.description} \n              deliveryTime = {item.delivery_time} \n              furnitureStyle = {item.furniture_style.map(itemFurniture =>(\n                <p key={itemFurniture}>{itemFurniture}</p>\n              ))}/>\n          ))}\n        </ul>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}